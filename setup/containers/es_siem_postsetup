ES_USER_PWD="$(lxc exec $NAME -- cat .es_elastic_passwd)"
lxc exec $NAME -- rm -rf .es_elastic_passwd

creds_str='{"service":"elasticsearch","username":"elastic","password":"'${ES_USER_PWD}'"}'
save_creds $creds_str

log_info "Configuring Elasticsearch and Kibana"
lxc file push configs/es_siem/ $NAME/root/ -r

ack=$(lxc exec $NAME -- sh -c "curl -XPOST -u \"elastic:${ES_USER_PWD}\" http://${IP}:5601/api/data_views/data_view -d @/root/es_siem/es_data_view.json -H 'Content-Type:application/json' -H 'kbn-xsrf: true' -s")
if [[ $(jq -r .statusCode <<< $ack) != "200" ]]; then
  log_error "Failed to configure Kibana default data view: $ack"
fi

lxc exec $NAME -- rm -rf es_siem/

# clean variables holding sensitive info
ES_USER_PWD=""
creds_str=""

running_containers=$(lxc list -c n,s -f csv | grep -i running | cut -d ',' -f1)
for container in $running_containers; do
  containerz=$(echo $CONTAINERS | jq -r --arg cname "$container" '. | select(.name == $cname)')

  if [[ "$containerz" ]]; then
    container_name=$(echo $containerz | jq -r .name)
    container_type=$(echo $containerz | jq -r .type)
  else
    container_name="$container"
    container_type=""
  fi

  # Skip configuration for logger and SIEM
  if ! [[ "$container_type" =~ "siem" ]] && ! [[ "$container_type" =~ "logger" ]] || ! [ "$container_type" ]; then
    log_info "Configuring journal for '$container_name'"
    dhis2-set-journal $container_name $container_type

    log_info "Configuring filebeat for '$container_name'"
    dhis2-set-elasticsearch -i "$IP" $container_name
  fi
done

log_info "Configuring Kibana proxy access"
PROXY_CONTAINER=$(echo $CONTAINERS | jq '. | select(.type | contains("proxy")) |.name' | tr -d '"')

if [[ $PROXY == "nginx" ]]; then

  cat <<EOF > /tmp/${NAME}.conf
    # Proxy pass to servlet container

    location /${NAME} {
      proxy_pass                http://${IP}:5601;
      include                   /etc/nginx/proxy_params;
   }
EOF
  lxc file push /tmp/${NAME}.conf ${PROXY_CONTAINER}/etc/nginx/upstream/${NAME}.conf
  rm /tmp/${NAME}.conf

  lxc exec ${PROXY_CONTAINER} -- service nginx restart

elif [[ $PROXY == "apache2" ]]; then
#if proxy is apache2 ;
  cat <<EOF > /tmp/${NAME}
  <Location /${NAME}>
    Require all granted
    ProxyPass "http://${IP}:5601"
    ProxyPassReverse "http://${IP}:5601"
  </Location>
EOF

  lxc file push /tmp/${NAME} ${PROXY_CONTAINER}/etc/apache2/upstream/${NAME}
  rm /tmp/${NAME}

  lxc exec ${PROXY_CONTAINER} -- service apache2 restart
else
  log_warn "Proxy type '$PROXY' not supported. SIEM not configured for proxy access"
fi

lxc exec $NAME -- sh -c "echo \"server.basePath: \"/${NAME}\"\" >> /etc/kibana/kibana.yml"
lxc exec $NAME -- sh -c "echo \"server.publicBaseUrl: \"https://${FQDN}/${NAME}\"\" >> /etc/kibana/kibana.yml"
lxc exec $NAME -- sh -c "echo 'server.rewriteBasePath: true'  >> /etc/kibana/kibana.yml"

lxc exec $NAME -- service kibana restart

log_info "Done configuring SIEM"